{
  "openapi": "3.0.0",
  "info": {
    "title": "Rentx Documentation",
    "description": "This is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "filipediascontato@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Car",
      "description": "Gather endpoints related to car"
    },
    {
      "name": "Category",
      "description": "Gather endpoints related to car categories"
    },
    {
      "name": "Rental",
      "description": "Gather endpoints related to car rental"
    },
    {
      "name": "Specification",
      "description": "Gather endpoints related to car specifications"
    },
    {
      "name": "User",
      "description": "Gather endpoints related to users"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "List all categories.",
        "description": "List all categories in the database.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoriesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Create a category.",
        "description": "Create a new category.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoriesBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created."
          },
          "400": {
            "description": "Category already exists."
          }
        }
      }
    },
    "/catregories/import": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Upload a new categories",
        "description": "Upload a new category from a csv file.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/session": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authenticate the user.",
        "description": "Authenticate the user to generate a JWT token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sessionBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "User already exists."
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": [
          "Specification"
        ],
        "summary": "Create a specification",
        "description": "Create a new specification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/specificationBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Specification already exists."
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create an user.",
        "description": "Create a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "User already exists."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        }
      },
      "categoriesBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Category name example"
          },
          "description": {
            "type": "string",
            "example": "A small description of the category"
          }
        }
      },
      "categoriesResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/category"
        }
      },
      "sessionBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "babayaga@email.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "loveMyDog!123"
          }
        }
      },
      "specificationBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Multipoint Injection"
          },
          "description": {
            "type": "string",
            "example": "The MPFI is a system or method of injecting fuel into internal combustion engine through multi ports situated on intake valve of each cylinder."
          }
        }
      },
      "userBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Wick"
          },
          "username": {
            "type": "string",
            "example": "babayaga"
          },
          "email": {
            "type": "string",
            "example": "babayaga@email.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "loveMyDog!123"
          },
          "driver_license": {
            "type": "string",
            "example": "1234567890"
          }
        }
      }
    }
  }
}